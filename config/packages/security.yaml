security:
    # Encodage des mots de passe utilisateur
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # Chargement des utilisateurs (depuis l'entité User par l'email)
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        # Désactivation de la sécurité pour le profiler/dev
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # Firewall principal pour les routes API protégées
        main:
            lazy: true
            provider: app_user_provider
            stateless: true

            # Point d’entrée de login JWT
            json_login:
                check_path: /api/login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

            # Authentification JWT une fois connecté
            jwt: ~

    # Gestion des droits d’accès selon l’URL
    access_control:
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/register, roles: PUBLIC_ACCESS }
        - { path: ^/api/recipes, roles: PUBLIC_ACCESS }  # ✅ Ajouté pour rendre les recettes accessibles à tous
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/profile, roles: ROLE_USER }


when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4
                time_cost: 3
                memory_cost: 10
